<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.frame.user.dao.UserInfoDao">

	<sql id="commCols">
		user_id userId,user_name userName,name name,password password,add_user_id addUserId,create_time createTime,
		is_delete isDelete,status status
	</sql>
	
	<update id="createTable" flushCache="true">
		<![CDATA[
			CREATE TABLE user_info (
				user_id varchar(32) NOT NULL COMMENT '编码',
				user_name varchar(100) NOT NULL COMMENT '用户名',
			  	password varchar(100) NOT NULL COMMENT '密码',
				name varchar(30) NOT NULL COMMENT '名称',
				status int NOT NULL COMMENT '状态[10正常、20冻结]',
				add_user_id varchar(32) NOT NULL COMMENT '添加人',
				create_time datetime NOT NULL COMMENT '添加时间',
				is_delete int NOT NULL COMMENT '是否删除',
			  	PRIMARY KEY (user_id),
  				UNIQUE KEY unique_username (user_name)
			) COMMENT='用户表'
		]]>
	</update>
	
	<select id="isExistTable" resultType="int">
		select count(*) from user_info
	</select>
	
	<insert id="save" parameterType="userInfo" flushCache="true">
		 insert into user_info(user_id,user_name,password,name,status,add_user_id,create_time,is_delete)
		 values(#{userId},#{userName},#{password},#{name},#{status},#{addUserId},now(),#{isDelete})
	</insert>
	
	<update id="update" parameterType="userInfo" flushCache="true">
		update user_info
		<set>name=#{name},status=#{status}</set>
  		<where>user_id=#{userId}</where>
	</update>
	<update id="updateIsDelete" flushCache="true">
		update user_info
		<set>is_delete=#{isDelete}</set>
  		<where>user_id=#{userId}</where>
	</update>
	<update id="updatePassword" flushCache="true">
		update user_info
		<set>password=#{password}</set>
  		<where>user_id=#{userId}</where>
	</update>
	
	<select id="get" resultType="userInfo">
		select <include refid="commCols"/> from user_info
  		<where>user_id=#{userId}</where>
	</select>
	<select id="getByUserName" resultType="userInfo">
		select <include refid="commCols"/> from user_info
  		<where>user_name=#{userName}</where>
  	</select>
	
	<select id="findUserInfo" parameterType="userInfo" resultType="userInfo">
		select <include refid="commCols"/> from user_info
		<where>
			<if test="userName!=null and userName!=''">and user_name like concat(concat('%', #{userName}), '%')</if>
			<if test="isDelete!=null">and is_delete=#{isDelete}</if>
		</where>
		<choose>
		<when test="orderbys!=null and orderbys.size()>0">
			order by <foreach collection="orderbys" item="item" index="index" open="" separator="," close="">
				${item.property} ${item.type}
			</foreach>
		</when>
		<otherwise></otherwise>
		</choose>
  		limit #{currentIndex}, #{size}
	</select>
	<select id="findUserInfoCount" parameterType="userInfo" resultType="int">
		select count(*) from user_info
		<where>
			<if test="userName!=null and userName!=''">and user_name like concat(concat('%', #{userName}), '%')</if>
			<if test="isDelete!=null">and is_delete=#{isDelete}</if>
		</where>
	</select>
</mapper>